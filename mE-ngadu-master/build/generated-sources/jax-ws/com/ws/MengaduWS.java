
package com.ws;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "mengaduWS", targetNamespace = "http://ws.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MengaduWS {


    /**
     * 
     * @param inName
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "studentName", targetNamespace = "http://ws.com/", className = "com.ws.StudentName")
    @Action(input = "http://ws.com/mengaduWS/studentName")
    public void studentName(
        @WebParam(name = "inName", targetNamespace = "")
        String inName);

    /**
     * 
     * @param inCourse
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "stCourse", targetNamespace = "http://ws.com/", className = "com.ws.StCourse")
    @ResponseWrapper(localName = "stCourseResponse", targetNamespace = "http://ws.com/", className = "com.ws.StCourseResponse")
    @Action(input = "http://ws.com/mengaduWS/stCourseRequest", output = "http://ws.com/mengaduWS/stCourseResponse")
    public String stCourse(
        @WebParam(name = "inCourse", targetNamespace = "")
        int inCourse);

    /**
     * 
     * @param matric
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "inMatric", targetNamespace = "http://ws.com/", className = "com.ws.InMatric")
    @Action(input = "http://ws.com/mengaduWS/inMatric")
    public void inMatric(
        @WebParam(name = "matric", targetNamespace = "")
        int matric);

    /**
     * 
     * @param year
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "stYear", targetNamespace = "http://ws.com/", className = "com.ws.StYear")
    @ResponseWrapper(localName = "stYearResponse", targetNamespace = "http://ws.com/", className = "com.ws.StYearResponse")
    @Action(input = "http://ws.com/mengaduWS/stYearRequest", output = "http://ws.com/mengaduWS/stYearResponse")
    public String stYear(
        @WebParam(name = "year", targetNamespace = "")
        int year);

    /**
     * 
     * @param complaint
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "inComplaint", targetNamespace = "http://ws.com/", className = "com.ws.InComplaint")
    @ResponseWrapper(localName = "inComplaintResponse", targetNamespace = "http://ws.com/", className = "com.ws.InComplaintResponse")
    @Action(input = "http://ws.com/mengaduWS/inComplaintRequest", output = "http://ws.com/mengaduWS/inComplaintResponse")
    public String inComplaint(
        @WebParam(name = "complaint", targetNamespace = "")
        String complaint);

    /**
     * 
     * @param stat
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "comStatus", targetNamespace = "http://ws.com/", className = "com.ws.ComStatus")
    @ResponseWrapper(localName = "comStatusResponse", targetNamespace = "http://ws.com/", className = "com.ws.ComStatusResponse")
    @Action(input = "http://ws.com/mengaduWS/comStatusRequest", output = "http://ws.com/mengaduWS/comStatusResponse")
    public String comStatus(
        @WebParam(name = "stat", targetNamespace = "")
        int stat);

}
